/**
 * @author ngoanh2n
 */
group(property("group"))
version(property("version"))

apply plugin: "java"
apply plugin: "idea"    // Optional using for IntelliJ IDEA
apply plugin: "eclipse" // Optional using for Eclipse

ext {
    ENCODING                            = "UTF-8"
    SELENIUM_VERSION                    = "3.141.59"
    SELENIDE_VERSION                    = "5.17.0"
    APPIUM_VERSION                      = "7.4.1"
    TESTNG_VERSION                      = "7.1.0"
    SLF4J_VERSION                       = "1.7.30"
    REPORTPORTAL_AGENT_TESTNG_VERSION   = "5.0.8"
    REPORTPORTAL_LOGGER_LOG4J_VERSION   = "5.0.3"
}

[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8
[compileJava, compileTestJava]*.options.collect { options -> options.debug = true }
[compileJava, compileTestJava]*.options.collect { options -> options.encoding = ENCODING }

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "http://dl.bintray.com/epam/reportportal/" }
}

dependencies {
    /*
    * Selenium/Selenide
    */
    // https://mvnrepository.com/artifact/com.codeborne/selenide
    implementation("com.codeborne:selenide:$SELENIDE_VERSION")

    // https://mvnrepository.com/artifact/io.appium/java-client
    implementation("io.appium:java-client:$APPIUM_VERSION")

    // https://mvnrepository.com/artifact/com.codeborne/phantomjsdriver
    testImplementation("com.codeborne:phantomjsdriver:1.4.4") { transitive = false }

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/htmlunit-driver
    testImplementation("org.seleniumhq.selenium:htmlunit-driver:2.36.0")

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-safari-driver
    testImplementation("org.seleniumhq.selenium:selenium-safari-driver:$SELENIUM_VERSION") { transitive = false }

    /*
    * TestNG
    */
    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation("org.testng:testng:$TESTNG_VERSION")

    /*
    * ReportPortal
    */
    // https://mvnrepository.com/artifact/com.epam.reportportal/agent-java-testng?repo=epam-reportportal
    // http://dl.bintray.com/epam/reportportal/com/epam/reportportal/agent-java-testng
    implementation("com.epam.reportportal:agent-java-testng:$REPORTPORTAL_AGENT_TESTNG_VERSION")

    // https://mvnrepository.com/artifact/com.epam.reportportal/logger-java-log4j?repo=epam-reportportal
    // http://dl.bintray.com/epam/reportportal/com/epam/reportportal/logger-java-log4j/
    implementation("com.epam.reportportal:logger-java-log4j:$REPORTPORTAL_LOGGER_LOG4J_VERSION")

    /*
     * Logging
     */
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation("org.slf4j:slf4j-api:$SLF4J_VERSION")

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    testImplementation("org.slf4j:slf4j-log4j12:$SLF4J_VERSION")
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
    }
}

tasks.withType(Test).all { testTask ->
    testTask.systemProperties = [
            "file.encoding": "UTF-8",
    ]
    testTask.testLogging.showStandardStreams = true
    testTask.exclude "com.github.ngoanh2n.pages/**/*"
    testTask.outputs.upToDateWhen { false }
}

tasks.withType(Test) {
    /*
    * Tell with Gradle that use TestNG framework
    */
    useTestNG() {
        /*
        * Preserving order of TestNG tests
        */
        preserveOrder true

        /*
        * Grouping TestNG tests by instances
        */
        groupByInstances = true

        /*
        * To generate reports by TestNG library
        */
        useDefaultListeners = false

        /*
        * Set TestNG output dir
        */
        outputDirectory = file("build/testngOutput")

        //includeGroups 'unitTests'
        //excludeGroups 'integrationTests'
    }

    /*
    * Make failing tests do not fail the task
    */
    ignoreFailures = true

    /*
    * Turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library
    */
    reports.html.enabled = false

    /*
    * To show standard out and standard error of the test JVM(s) on the console
    */
    testLogging.showStandardStreams = true

    /*
    *  Want to display the following test events
    */
    testLogging { events "passed", "skipped", "failed" }

    /*
    * To make the Gradle JVM system properties available to tests
    */
    systemProperties = System.getProperties() as Map<String, ?>
}
